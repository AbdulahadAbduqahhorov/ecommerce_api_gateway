definitions:
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateCategoryModel:
    properties:
      title:
        type: string
    type: object
  models.CreateOrderModel:
    properties:
      customer_address:
        type: string
      customer_name:
        type: string
      customer_phone:
        type: string
      order_items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
    required:
    - customer_address
    - customer_name
    - customer_phone
    type: object
  models.CreateProductModel:
    properties:
      category_id:
        type: string
      description:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      title:
        type: string
    required:
    - category_id
    - description
    - price
    - quantity
    - title
    type: object
  models.GetAllCategoryModel:
    properties:
      count:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.Category'
        type: array
    type: object
  models.GetAllOrderModel:
    properties:
      count:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  models.GetAllProductModel:
    properties:
      count:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.Order:
    properties:
      customer_address:
        type: string
      customer_name:
        type: string
      customer_phone:
        type: string
      id:
        type: string
      total_price:
        type: integer
    required:
    - customer_address
    - customer_name
    - customer_phone
    - total_price
    type: object
  models.OrderItem:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  models.Product:
    properties:
      category_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    required:
    - category_id
    - description
    - price
    - quantity
    - title
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  models.UpdateCategoryModel:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  models.UpdateProductModel:
    properties:
      description:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /category:
    get:
      consumes:
      - application/json
      description: Get All Category
      operationId: get all category
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllCategoryModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get All Category
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Create Category
      operationId: create_category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Create Category
      tags:
      - category
  /category/{category_id}:
    delete:
      consumes:
      - application/json
      description: Delete Category by given ID
      operationId: delete_category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Delete Category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Get Category
      operationId: get_category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllCategoryModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get Category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Update Category by ID
      operationId: update_category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategoryModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Update Category
      tags:
      - category
  /order:
    get:
      consumes:
      - application/json
      description: Get All Order
      operationId: get all order
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllOrderModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get All Order
      tags:
      - order
    post:
      consumes:
      - application/json
      description: Create Order
      operationId: create_order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Create Order
      tags:
      - order
  /order/{order_id}:
    get:
      consumes:
      - application/json
      description: Get Order
      operationId: get_order
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllOrderModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get Order
      tags:
      - order
  /product:
    get:
      consumes:
      - application/json
      description: Get All Product
      operationId: get all product
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      - description: category_id
        in: query
        name: category_id
        type: string
      - description: string enums
        enum:
        - Price Low to High
        - Price High to Low
        in: query
        name: enumstring
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllProductModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get All Product
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create Product
      operationId: create_product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Create Product
      tags:
      - product
  /product/{product_id}:
    delete:
      consumes:
      - application/json
      description: Delete Product by given ID
      operationId: delete_product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Delete Product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get Product
      operationId: get_product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllProductModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Get Product
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Update Product by ID
      operationId: update_product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProductModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Update Product
      tags:
      - product
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
